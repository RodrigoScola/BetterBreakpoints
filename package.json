{
	"publisher": "rodrigoscola",
	"name": "betterbreakpoints",
	"icon": "docs/icon.png",
	"displayName": "Better Breakpoints",
	"description": "A more complete visual studio code breakpoint implementation",
	"version": "0.0.7",
	"engines": {
		"vscode": "^1.98.0"
	},
	"bugs": {
		"url": "https://github.com/RodrigoScola/BetterBreakpoints",
		"email": "rodrigo.sgarabotto.scola@gmail.com"
	},
	"author": {
		"name": "Rodrigo Scola",
		"url": "https://github.com/RodrigoScola"
	},
	"keywords": [
		"breakpoints",
		"betterBreakpoints",
		"debug",
		"debugging"
	],
	"categories": [
		"Debuggers",
		"Other"
	],
	"repository": {
		"url": "https://github.com/RodrigoScola/BetterBreakpoints"
	},
	"homepage": "https://github.com/RodrigoScola/BetterBreakpoints",
	"activationEvents": [
		"onDebug",
		"onStartupFinished"
	],
	"main": "./dist/extension.js",
	"contributes": {
		"configuration": {
			"title": "Better Breakpoints",
			"properties": {
				"betterbreakpoints.ignoredFiles": {
					"type": "array",
					"default": []
				}
			}
		},
		"views": {
			"debug": [
				{
					"id": "ignoreFiles",
					"name": "ignore files",
					"icon": "icon"
				}
			]
		},
		"menus": {
			"view/title": [
				{
					"command": "betterbreakpoints.addIgnoreFile",
					"when": "view == ignoreFiles",
					"group": "navigation"
				}
			],
			"view/item/context": [
				{
					"command": "betterbreakpoints.editIgnoreFile",
					"when": "view == ignoreFiles && viewItem == dependency ",
					"group": "inline"
				},
				{
					"command": "betterbreakpoints.deleteIgnoreFile",
					"when": "view == ignoreFiles && viewItem == dependency ",
					"group": "inline"
				}
			]
		},
		"commands": [
			{
				"command": "betterbreakpoints.editIgnoreFile",
				"icon": "$(pencil)",
				"title": "edit"
			},
			{
				"command": "betterbreakpoints.deleteIgnoreFile",
				"icon": "$(trash)",
				"title": "delete"
			},
			{
				"command": "betterbreakpoints.addIgnoreFile",
				"icon": "$(add)",
				"title": "Add"
			},
			{
				"command": "betterbreakpoints.listBreakPoints",
				"title": "List All Breakpoints from project"
			},
			{
				"command": "betterbreakpoints.addOnAssert",
				"title": "Add commands on assert condition"
			},
			{
				"command": "betterbreakpoints.projectAddOnAssert",
				"title": "Add on project assert"
			},
			{
				"command": "betterbreakpoints.remove.logpoints.file",
				"title": "Remove logpoints from file"
			},
			{
				"command": "betterbreakpoints.disable.logpoints.file",
				"title": "Disable logpoints from file"
			},
			{
				"command": "betterbreakpoints.enable.logpoints.file",
				"title": "Enable logpoints from file"
			},
			{
				"command": "betterbreakpoints.remove.breakpoints.file",
				"title": "Remove breakpoints from file"
			},
			{
				"command": "betterbreakpoints.disable.breakpoints.file",
				"title": "Disable breakpoints from file"
			},
			{
				"command": "betterbreakpoints.enable.breakpoints.file",
				"title": "Enable breakpoints from file"
			},
			{
				"command": "betterbreakpoints.remove.conditionals.file",
				"title": "Remove conditionals from file"
			},
			{
				"command": "betterbreakpoints.disable.conditionals.file",
				"title": "Disable conditionals from file"
			},
			{
				"command": "betterbreakpoints.enable.conditionals.file",
				"title": "Enable breakpoints from file"
			},
			{
				"command": "betterbreakpoints.remove.all.file",
				"title": "Remove all breakpoints from file"
			},
			{
				"command": "betterbreakpoints.disable.all.file",
				"title": "Disable all breakpoints from file"
			},
			{
				"command": "betterbreakpoints.enable.all.file",
				"title": "Enable all breakpoints from file"
			},
			{
				"command": "betterbreakpoints.remove.oneTime.file",
				"title": "Remove oneTime from file"
			},
			{
				"command": "betterbreakpoints.disable.oneTime.file",
				"title": "Disable oneTime from file"
			},
			{
				"command": "betterbreakpoints.enable.oneTime.file",
				"title": "Enable oneTime from file"
			},
			{
				"command": "betterbreakpoints.remove.logpoints.workspace",
				"title": "Remove logpoints from workspace"
			},
			{
				"command": "betterbreakpoints.disable.logpoints.workspace",
				"title": "Disable logpoints from workspace"
			},
			{
				"command": "betterbreakpoints.enable.logpoints.workspace",
				"title": "Enable logpoints from workspace"
			},
			{
				"command": "betterbreakpoints.remove.breakpoints.workspace",
				"title": "Remove breakpoints from workspace"
			},
			{
				"command": "betterbreakpoints.disable.breakpoints.workspace",
				"title": "Disable breakpoints from workspace"
			},
			{
				"command": "betterbreakpoints.enable.breakpoints.workspace",
				"title": "Enable breakpoints from workspace"
			},
			{
				"command": "betterbreakpoints.remove.conditionals.workspace",
				"title": "Remove conditionals from workspace"
			},
			{
				"command": "betterbreakpoints.disable.conditionals.workspace",
				"title": "Disable conditionals from workspace"
			},
			{
				"command": "betterbreakpoints.enable.conditionals.workspace",
				"title": "Enable breakpoints from workspace"
			},
			{
				"command": "betterbreakpoints.remove.hitConditionals.workspace",
				"title": "Remove hit Conditions from workspace"
			},
			{
				"command": "betterbreakpoints.disable.hitConditionals.workspace",
				"title": "Disable hit Conditions from workspace"
			},
			{
				"command": "betterbreakpoints.enable.hitConditionals.workspace",
				"title": "Enable hit Conditions from workspace"
			},
			{
				"command": "betterbreakpoints.remove.all.workspace",
				"title": "Remove all breakpoints from workspace"
			},
			{
				"command": "betterbreakpoints.disable.all.workspace",
				"title": "Disable all breakpoints from workspace"
			},
			{
				"command": "betterbreakpoints.enable.all.workspace",
				"title": "Enable all breakpoints from workspace"
			},
			{
				"command": "betterbreakpoints.remove.oneTime.workspace",
				"title": "Remove oneTime breakpoints from workspace"
			},
			{
				"command": "betterbreakpoints.disable.oneTime.workspace",
				"title": "Disable oneTime breakpoints from workspace"
			},
			{
				"command": "betterbreakpoints.enable.oneTime.workspace",
				"title": "Enable oneTime breakpoints from workspace"
			},
			{
				"command": "betterbreakpoints.addTriggered",
				"title": "add triggered"
			}
		]
	},
	"scripts": {
		"vscode:prepublish": "npm run package",
		"compile": "npm run check-types && npm run lint && node esbuild.js",
		"watch": "npm-run-all -p watch:*",
		"watch:esbuild": "node esbuild.js --watch",
		"watch:tsc": "tsc --noEmit --watch --project tsconfig.json",
		"package": "npm run check-types && npm run lint && node esbuild.js --production",
		"compile-tests": "tsc -p . --outDir out",
		"watch-tests": "tsc -p . -w --outDir out",
		"pretest": "npm run compile-tests && npm run compile && npm run lint",
		"check-types": "tsc --noEmit",
		"lint": "eslint src",
		"test": "vscode-test"
	},
	"devDependencies": {
		"@types/micromatch": "^4.0.9",
		"@types/mocha": "^10.0.8",
		"@types/node": "20.x",
		"@types/vscode": "^1.98.0",
		"@typescript-eslint/eslint-plugin": "^8.7.0",
		"@typescript-eslint/parser": "^8.7.0",
		"@vscode/test-cli": "^0.0.10",
		"@vscode/test-electron": "^2.4.1",
		"esbuild": "^0.24.0",
		"eslint": "^9.11.1",
		"npm-run-all": "^4.1.5",
		"typescript": "^5.6.2"
	},
	"dependencies": {
		"micromatch": "^4.0.8"
	}
}
